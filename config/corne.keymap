/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        behaviors {
                hm: homerow_mods {
                        compatible = "zmk,behavior-hold-tap";
                        #binding-cells = <2>;
                        tapping-term-ms = <150>;
                        quick-tap-ms = <0>;
                        flavor = "tap-preferred";
                        bindings = <&kp>, <&kp>;
                };
        };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |   E   |  R  |  T  |   |  Y  |  U  |  I  |  O  |  P  |
// | S/A | C/S |  A/D  |  F  |  G  |   |  H  |  J  | A/K | C/L | S/; |
// |  Z  |  X  |   C   |  V  |  B  |   |  N  |  M  |  ,  |  .  |  /  |
//             | G/RET | LWR | BSP |   | SPC | RSE | TAB |
                        bindings = <
   &trans  &kp Q         &kp W        &kp E      &kp R    &kp T     &kp Y  &kp U   &kp I      &kp O      &kp P       &trans
   &trans  &hm LSHIFT A  &hm LCTRL S  &hm LALT D &kp F    &kp G     &kp H  &kp J   &hm RALT K &hm RCTRL L &hm RSHIFT SEMI &trans
   &trans  &kp Z         &kp X        &kp C      &kp V    &kp B     &kp N  &kp M   &kp COMMA  &kp DOT    &kp FSLH    &trans
                         &mt LGUI RET &mo 1      &kp BSPC &kp SPACE &mo 2  &kp TAB
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  1    |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |
// | BT1   | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT | DEL |
// | BTCLR |     |     |     |     |   |     |     |     |     |     |
//               | RET |     | BSP |   | SPC | ESC | TAB |
                        bindings = <
   &trans  &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6             &kp N7   &kp N8 &kp N9    &kp N0  &trans
   &trans  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT           &kp DOWN &kp UP &kp RIGHT &kp DEL &trans
   &trans  &bt BT_CLR   &trans       &trans       &trans       &trans         &trans             &trans   &trans &trans    &trans  &trans
                                     &kp RET      &trans       &kp BSPC       &mt LS(LGUI) SPACE &kp ESC  &kp TAB
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |
// |  ~  | GUI |  S  |  C  |  A  |   |  -  |  =  |  [  |  ]  |  \  |
// |  `  |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |
//             | GUI | ESC | RET |   | SPC |     | TAB |
                        bindings = <
   &trans  &kp EXCL  &kp AT  &kp HASH   &kp DLLR  &kp PRCNT     &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &trans
   &trans  &kp TILDE &trans  &kp LSHIFT &kp LCTRL &kp LALT      &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &trans
   &trans  &kp GRAVE &trans  &trans     &trans    &trans        &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &trans
                             &mt LGUI RET    &kp ESC   &kp BSPC      &kp SPACE &trans    &kp TAB
                        >;
                };
        };
};
